[project]
name = "bigearthnet-documentation"
version = "0.1.3"
description = "A user-friendly introduction to the multi-spectral BigEarthNet dataset."
authors = [
    {name = "Kai Norman Clasen", email= "k.clasen@protonmail.com"},
]
license = {text = "MIT license"}
readme = "README.md"
#- Uses the < syntax instead of <= because conda-forge does not work correctly with <=
# deps-start
requires-python = ">=3.8"
dependencies = [

]
# deps-end

[project.urls]
homepage = "https://github.com/kai-tub/ben-docs/"
repository = "https://github.com/kai-tub/ben-docs/"
documentation = "https://kai-tub.github.io/ben-docs"

[project.optional-dependencies]
[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool.pdm.build]
includes = [
    "LICENSE",
    "src",
]

[tool.pdm.dev-dependencies]
docs = [
    "myst-nb>=0.16",
    "Sphinx>=4.5",
    "sphinx-autobuild",
    "sphinx-external-toc",
    "linkify-it-py",
    "sphinx-design",
    "furo",
    "common-nb-preprocessors>=1.1",
    "bigearthnet_encoder",
    "bigearthnet_common",
    "bigearthnet_patch_interface",
    "bigearthnet_gdf_builder>=0.1.10",
    "mapclassify",
    "matplotlib",
    "geopandas>=0.11",
    "diskcache",
    "appdirs",
    "sphinxcontrib-mermaid",
    "sphinx-comments>=0.0.3",
    "sphinxcontrib-bibtex>=2.4.2",
    "folium",
    "-e file:///home/kai/git/furo-myst-nb-css-fixes#egg=furo-myst-nb-css-fixes",
]
test = [
    "pytest",
    "pre-commit",
    "jupyter",
    "notebook",
]
lint = [
    "black[jupyter]",
    "isort",
    "nbstripout",
]

[tool.isort]
profile = "black"

[tool.pdm.scripts]
check-pre-commit = "pre-commit run --all-files"
# check-types = "mypy src"

lint.composite = [
    "check-pre-commit",
    # "check-types",
]
lint.help = "Will check if all files are formatted with black & isort"

build-docs.cmd = "sphinx-build docs docs/_build/"
build-docs.help = "Build Sphinx documentation"
serve-sphinx-docs.cmd = "sphinx-autobuild docs docs/_build --open-browser"
serve-sphinx-docs.help = "Serve the Sphinx documentation with sphinx-autobuild"

tests = "pytest tests/"
# If coverage is desired:
# tests = "coverage run --parallel --source bigearthnet_documentation -m pytest tests"
# coverage_report.composite = [
#     "coverage combine",
#     "coverage report --fail-under 95",
# ]
# coverage_html_report = "coverage html"
# coverage_html.composite = [
#     "tests",
#     "coverage_html_report"
# ]
# coverage_html.help = "Run the coverage with pytest and produce the html"
